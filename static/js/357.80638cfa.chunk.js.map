{"version":3,"file":"static/js/357.80638cfa.chunk.js","mappings":"8LAmDA,UA/Ca,WACX,IAAAA,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GAEdI,GAASC,EAAAA,EAAAA,MA2Bf,OAzBAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAeH,EAAOI,SACnBC,MAAK,SAAAC,GACJ,IAAKA,EAAKC,GACR,MAAM,IAAIC,MAEZ,OAAOF,EAAKG,MACd,IACCJ,MAAK,SAAAK,GACJX,EACEW,EAAKZ,KACFa,QACC,SAAAC,GAAK,OACHA,EAAMC,IAAMD,EAAME,MAAQF,EAAMG,WAAaH,EAAMI,YAAY,IAElEC,KAAI,SAAAC,GAAA,IAAGL,EAAEK,EAAFL,GAAIC,EAAII,EAAJJ,KAAMC,EAASG,EAATH,UAAWC,EAAYE,EAAZF,aAAY,MAAQ,CAC/CH,GAAAA,EACAC,KAAAA,EACAC,UAAAA,EACAI,MAAM,kCAADC,OAAoCJ,GAC1C,IAEP,GACJ,GAAG,CAAChB,EAAOI,WAGTiB,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,SACGzB,EAAK0B,OAAS,IACbH,EAAAA,EAAAA,KAAA,MAAAE,SACGzB,EAAKmB,KAAI,SAAAQ,GAAA,IAAGX,EAAIW,EAAJX,KAAMC,EAASU,EAATV,UAAWI,EAAKM,EAALN,MAAON,EAAEY,EAAFZ,GAAE,OACrCa,EAAAA,EAAAA,MAAA,MAAAH,SAAA,EACEF,EAAAA,EAAAA,KAAA,OAAKM,IAAKR,EAAOS,IAAKd,KACtBO,EAAAA,EAAAA,KAAA,MAAAE,SAAKT,KACLY,EAAAA,EAAAA,MAAA,KAAAH,SAAA,CAAG,eAAaR,OAHTF,EAIJ,OAMjB,C,uJCjDA,IAAMgB,EAAU,mCACVC,EAAW,gCAEJC,EAAsB,WACjC,OAAOC,MAAM,GAADZ,OAAIU,EAAQ,+BAAAV,OAA8BS,GACxD,EAEaI,EAAmB,SAAAC,GAC9B,OAAOF,MAAM,GAADZ,OAAIU,EAAQ,yBAAAV,OAAwBS,EAAO,WAAAT,OAAUc,GACnE,EAEaC,EAAiB,SAAAtB,GAC5B,OAAOmB,MAAM,GAADZ,OAAIU,EAAQ,UAAAV,OAASP,EAAE,aAAAO,OAAYS,GACjD,EAEa1B,EAAiB,SAAAU,GAC5B,OAAOmB,MAAM,GAADZ,OAAIU,EAAQ,UAAAV,OAASP,EAAE,qBAAAO,OAAoBS,GACzD,EAEaO,EAAiB,SAAAvB,GAC5B,OAAOmB,MAAM,GAADZ,OAAIU,EAAQ,UAAAV,OAASP,EAAE,qBAAAO,OAAoBS,GACzD,C","sources":["components/pages/Cast.jsx","components/services/moviedb.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { fetchForActors } from 'components/services/moviedb';\nimport { useParams } from 'react-router-dom';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n\n  const params = useParams();\n\n  useEffect(() => {\n    fetchForActors(params.movieId)\n      .then(resp => {\n        if (!resp.ok) {\n          throw new Error();\n        }\n        return resp.json();\n      })\n      .then(data => {\n        setCast(\n          data.cast\n            .filter(\n              actor =>\n                actor.id && actor.name && actor.character && actor.profile_path\n            )\n            .map(({ id, name, character, profile_path }) => ({\n              id,\n              name,\n              character,\n              image: `https://image.tmdb.org/t/p/w200${profile_path}`,\n            }))\n        );\n      });\n  }, [params.movieId]);\n\n  return (\n    <>\n      {cast.length > 0 && (\n        <ul>\n          {cast.map(({ name, character, image, id }) => (\n            <li key={id}>\n              <img src={image} alt={name} />\n              <h3>{name}</h3>\n              <p>Character : {character}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n","const API_KEY = '1f49b40244739c7e3b1b706c1c1ec0d7';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport const fetchTrendingMovies = () => {\n  return fetch(`${BASE_URL}trending/movie/day?api_key=${API_KEY}`);\n};\n\nexport const fetchMovieByName = value => {\n  return fetch(`${BASE_URL}search/movie?api_key=${API_KEY}&query=${value}`);\n};\n\nexport const fetchMovieById = id => {\n  return fetch(`${BASE_URL}movie/${id}?api_key=${API_KEY}`);\n};\n\nexport const fetchForActors = id => {\n  return fetch(`${BASE_URL}movie/${id}/credits?api_key=${API_KEY}`);\n};\n\nexport const fetchToReviews = id => {\n  return fetch(`${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}`);\n};\n"],"names":["_useState","useState","_useState2","_slicedToArray","cast","setCast","params","useParams","useEffect","fetchForActors","movieId","then","resp","ok","Error","json","data","filter","actor","id","name","character","profile_path","map","_ref","image","concat","_jsx","_Fragment","children","length","_ref2","_jsxs","src","alt","API_KEY","BASE_URL","fetchTrendingMovies","fetch","fetchMovieByName","value","fetchMovieById","fetchToReviews"],"sourceRoot":""}