{"version":3,"file":"static/js/877.1d142cf8.chunk.js","mappings":"8OAEaA,E,OAAqBC,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,sD,SCkD3C,EA/Ca,WACX,IAAAC,GAA4CC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjDI,EAAcF,EAAA,GAAEG,EAAiBH,EAAA,GACxCI,GAA0BL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA/BE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAChBG,GAAWC,EAAAA,EAAAA,MA2BjB,OAzBAC,EAAAA,EAAAA,YAAU,WACRH,EAAS,KACTI,EAAAA,EAAAA,MACGC,MAAK,SAAAC,GACJ,IAAKA,EAAKC,GAER,MADAP,EAAS,0BACH,IAAIQ,MAEZ,OAAOF,EAAKG,MACd,IACCJ,MAAK,SAAAK,GACJ,GAA4B,IAAxBA,EAAKC,QAAQC,OAEf,MADAZ,EAAS,iCACH,IAAIQ,MAEZ,OAAOE,EAAKC,OACd,IACCN,MAAK,SAAAK,GACJd,EACEc,EAAKG,KAAI,SAAAC,GAAI,MAAK,CAAEC,MAAOD,EAAKC,MAAOC,GAAIF,EAAKE,GAAI,IAExD,IACCC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,EAAI,GAClC,GAAG,KAGDG,EAAAA,EAAAA,KAAClC,EAAkB,CAAAmC,SAChBvB,GACCsB,EAAAA,EAAAA,KAAA,MAAAC,SAAKvB,IAELJ,EAAekB,KAAI,SAAAC,GAAI,OACrBO,EAAAA,EAAAA,KAAA,MAAAC,UACED,EAAAA,EAAAA,KAACE,EAAAA,GAAI,CAACC,GAAE,WAAAC,OAAaX,EAAKE,IAAMU,MAAOzB,EAAS0B,SAASL,SACtDR,EAAKC,SAFDD,EAAKE,GAIT,KAKf,C,uJClDA,IAAMY,EAAU,mCACVC,EAAW,gCAEJzB,EAAsB,WACjC,OAAO0B,MAAM,GAADL,OAAII,EAAQ,+BAAAJ,OAA8BG,GACxD,EAEaG,EAAmB,SAAAC,GAC9B,OAAOF,MAAM,GAADL,OAAII,EAAQ,yBAAAJ,OAAwBG,EAAO,WAAAH,OAAUO,GACnE,EAEaC,EAAiB,SAAAjB,GAC5B,OAAOc,MAAM,GAADL,OAAII,EAAQ,UAAAJ,OAAST,EAAE,aAAAS,OAAYG,GACjD,EAEaM,EAAiB,SAAAlB,GAC5B,OAAOc,MAAM,GAADL,OAAII,EAAQ,UAAAJ,OAAST,EAAE,qBAAAS,OAAoBG,GACzD,EAEaO,EAAiB,SAAAnB,GAC5B,OAAOc,MAAM,GAADL,OAAII,EAAQ,UAAAJ,OAAST,EAAE,qBAAAS,OAAoBG,GACzD,C","sources":["components/HomePage/TrendingMoviesList.styled.js","components/pages/Home.jsx","components/services/moviedb.js"],"sourcesContent":["import { styled } from 'styled-components';\n\nexport const TrendingMoviesList = styled.ul`\n  padding-top: 140px;\n  list-style: none;\n`;\n","import { useEffect, useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { fetchTrendingMovies } from 'components/services/moviedb';\nimport { TrendingMoviesList } from 'components/HomePage/TrendingMoviesList.styled';\n\nconst Home = () => {\n  const [trandingMovies, setTrandingMovies] = useState([]);\n  const [error, setError] = useState('');\n  const location = useLocation();\n\n  useEffect(() => {\n    setError('');\n    fetchTrendingMovies()\n      .then(resp => {\n        if (!resp.ok) {\n          setError('Sorry, something wrong');\n          throw new Error();\n        }\n        return resp.json();\n      })\n      .then(data => {\n        if (data.results.length === 0) {\n          setError(\"Sorry we didn't find anything\");\n          throw new Error();\n        }\n        return data.results;\n      })\n      .then(data => {\n        setTrandingMovies(\n          data.map(film => ({ title: film.title, id: film.id }))\n        );\n      })\n      .catch(err => console.log(err));\n  }, []);\n\n  return (\n    <TrendingMoviesList>\n      {error ? (\n        <li>{error}</li>\n      ) : (\n        trandingMovies.map(film => (\n          <li key={film.id}>\n            <Link to={`/movies/${film.id}`} state={location.pathname}>\n              {film.title}\n            </Link>\n          </li>\n        ))\n      )}\n    </TrendingMoviesList>\n  );\n};\n\nexport default Home;\n","const API_KEY = '1f49b40244739c7e3b1b706c1c1ec0d7';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport const fetchTrendingMovies = () => {\n  return fetch(`${BASE_URL}trending/movie/day?api_key=${API_KEY}`);\n};\n\nexport const fetchMovieByName = value => {\n  return fetch(`${BASE_URL}search/movie?api_key=${API_KEY}&query=${value}`);\n};\n\nexport const fetchMovieById = id => {\n  return fetch(`${BASE_URL}movie/${id}?api_key=${API_KEY}`);\n};\n\nexport const fetchForActors = id => {\n  return fetch(`${BASE_URL}movie/${id}/credits?api_key=${API_KEY}`);\n};\n\nexport const fetchToReviews = id => {\n  return fetch(`${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}`);\n};\n"],"names":["TrendingMoviesList","styled","_templateObject","_taggedTemplateLiteral","_useState","useState","_useState2","_slicedToArray","trandingMovies","setTrandingMovies","_useState3","_useState4","error","setError","location","useLocation","useEffect","fetchTrendingMovies","then","resp","ok","Error","json","data","results","length","map","film","title","id","catch","err","console","log","_jsx","children","Link","to","concat","state","pathname","API_KEY","BASE_URL","fetch","fetchMovieByName","value","fetchMovieById","fetchForActors","fetchToReviews"],"sourceRoot":""}