{"version":3,"file":"static/js/831.cded7795.chunk.js","mappings":"8LAoDA,UAhDgB,WACd,IAAAA,GAA8BC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAArCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAC1BI,GAA0BL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA/BE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAChBG,GAASC,EAAAA,EAAAA,MA2Bf,OAzBAC,EAAAA,EAAAA,YAAU,WACRH,EAAS,KACTI,EAAAA,EAAAA,IAAeH,EAAOI,SACnBC,MAAK,SAAAC,GACJ,IAAKA,EAAKC,GACR,MAAM,IAAIC,MAEZ,OAAOF,EAAKG,MACd,IACCJ,MAAK,SAAAK,GACJ,GAA4B,IAAxBA,EAAKC,QAAQC,OAEf,MADAb,EAAS,4CACH,IAAIS,MAGZb,EACEe,EAAKC,QAAQE,KAAI,SAAAC,GAAkB,MAAQ,CACzCC,OADwBD,EAANC,OAElBC,QAFiCF,EAAPE,QAG3B,IAEL,IACCC,OAAM,SAAAnB,GAAK,OAAIoB,QAAQC,IAAIrB,EAAM,GACtC,GAAG,CAACE,EAAOI,WAGTgB,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,SACGxB,GACCsB,EAAAA,EAAAA,KAAA,MAAAE,SAAKxB,KAELsB,EAAAA,EAAAA,KAAA,MAAAE,SACU,OAAP5B,QAAO,IAAPA,OAAO,EAAPA,EAASmB,KAAI,SAAAU,EAAsBC,GAAK,IAAxBT,EAAMQ,EAANR,OAAQC,EAAOO,EAAPP,QAAO,OAC9BS,EAAAA,EAAAA,MAAA,MAAAH,SAAA,EACEG,EAAAA,EAAAA,MAAA,MAAAH,SAAA,CAAI,WAASP,MACbK,EAAAA,EAAAA,KAAA,KAAAE,SAAIN,MAFGQ,EAGJ,OAMjB,C,uJClDA,IAAME,EAAU,mCACVC,EAAW,gCAEJC,EAAsB,WACjC,OAAOC,MAAM,GAADC,OAAIH,EAAQ,+BAAAG,OAA8BJ,GACxD,EAEaK,EAAmB,SAAAC,GAC9B,OAAOH,MAAM,GAADC,OAAIH,EAAQ,yBAAAG,OAAwBJ,EAAO,WAAAI,OAAUE,GACnE,EAEaC,EAAiB,SAAAC,GAC5B,OAAOL,MAAM,GAADC,OAAIH,EAAQ,UAAAG,OAASI,EAAE,aAAAJ,OAAYJ,GACjD,EAEaS,EAAiB,SAAAD,GAC5B,OAAOL,MAAM,GAADC,OAAIH,EAAQ,UAAAG,OAASI,EAAE,qBAAAJ,OAAoBJ,GACzD,EAEavB,EAAiB,SAAA+B,GAC5B,OAAOL,MAAM,GAADC,OAAIH,EAAQ,UAAAG,OAASI,EAAE,qBAAAJ,OAAoBJ,GACzD,C","sources":["components/pages/Reviews.jsx","components/services/moviedb.js"],"sourcesContent":["import { fetchToReviews } from 'components/services/moviedb';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState(null);\n  const [error, setError] = useState('');\n  const params = useParams();\n\n  useEffect(() => {\n    setError('');\n    fetchToReviews(params.movieId)\n      .then(resp => {\n        if (!resp.ok) {\n          throw new Error();\n        }\n        return resp.json();\n      })\n      .then(data => {\n        if (data.results.length === 0) {\n          setError(\"We don't have any reviews for this movie\");\n          throw new Error();\n        }\n\n        setReviews(\n          data.results.map(({ author, content }) => ({\n            author,\n            content,\n          }))\n        );\n      })\n      .catch(error => console.log(error));\n  }, [params.movieId]);\n\n  return (\n    <>\n      {error ? (\n        <h3>{error}</h3>\n      ) : (\n        <ul>\n          {reviews?.map(({ author, content }, index) => (\n            <li key={index}>\n              <h3>Author: {author}</h3>\n              <p>{content}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","const API_KEY = '1f49b40244739c7e3b1b706c1c1ec0d7';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport const fetchTrendingMovies = () => {\n  return fetch(`${BASE_URL}trending/movie/day?api_key=${API_KEY}`);\n};\n\nexport const fetchMovieByName = value => {\n  return fetch(`${BASE_URL}search/movie?api_key=${API_KEY}&query=${value}`);\n};\n\nexport const fetchMovieById = id => {\n  return fetch(`${BASE_URL}movie/${id}?api_key=${API_KEY}`);\n};\n\nexport const fetchForActors = id => {\n  return fetch(`${BASE_URL}movie/${id}/credits?api_key=${API_KEY}`);\n};\n\nexport const fetchToReviews = id => {\n  return fetch(`${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}`);\n};\n"],"names":["_useState","useState","_useState2","_slicedToArray","reviews","setReviews","_useState3","_useState4","error","setError","params","useParams","useEffect","fetchToReviews","movieId","then","resp","ok","Error","json","data","results","length","map","_ref","author","content","catch","console","log","_jsx","_Fragment","children","_ref2","index","_jsxs","API_KEY","BASE_URL","fetchTrendingMovies","fetch","concat","fetchMovieByName","value","fetchMovieById","id","fetchForActors"],"sourceRoot":""}